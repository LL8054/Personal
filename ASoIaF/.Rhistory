git remote add origin https://github.com/LL8054/datasciencecoursera.git
git remote add origin https://github.com/LL8054/datasciencecoursera.git
git push -u origin master
git remote add origin https://github.com/LL8054/datasciencecoursera.git
git push -u origin master
## This is a markdown file
git remote add origin https://github.com/LL8054/datasciencecoursera.git
git push -u origin master
git remote add origin https://github.com/LL8054/datasciencecoursera.git
git push -u origin master
q()
install.packages("KernSmooth"")
library(kernsmooth)
library("KernSmooth", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
library(swirl)
swirl()
swirl()
head(flags)
dim(flags)
viewinfo()
class(flags)
cls_list <- lapply(flags,class)
cls_lis
cls_list
class(cls_list)
cls_list
as.character(cls_list)
cls_vect <- sapply(flags,class)
class(cls-vect)
class(cls_vect)
sum(flag$orange)
sum(flags$orange)
flag_colors <- flags[,11:17]
head(flag_colors)
lapply(flag_colors, sum)
sapply(flag_colors,sum)
sapply(flag_colors, mean)
flag_shapes <- [,19:23]
flag_shapes <- flags[,19:23]
lapply(flag_shapes,range)
sapply(flag_shapes,range)
shape_mat <- sapply(flag_shapes,range)
shape_mat
class(shape_mat)
unique(c(3,4,5,5,5,5,5,5,6,6,6))
unique(c(3,4,5,5,5,6,6,))
unique(c(3,4,5,5,5,6,6))
lapply(flags,unique)
unique_ vals <- lapply(flags,unique)
unique_vals <- lapply(flags,unique)
unique_vals
sapply(unique_vals,length)
sapply(flags,unique)
lapply(unique_vals, function(elem elem[2]))
lapply(unique_vals, function(elem) elem[2]))
lapply(unique_vals, function(elem) elem[2])
sapply(flags,unique)
vapply(flags,unique,numeric)1))
ok()
sapply(flags,class)
vapply(flags,class,character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmasses, summary)
tapply(flags$population, flags$landmass, summary)
exit
bye()
library(datasets)
datasets(iris)
data(iris)
?iris
iris
tapply(sepal.length, species, mean)
tapply(Sepal.Length, Species, mean)
tapply(iris, Sepal.Length, Species, mean)
tapply(iris, Sepal.Length, mean)
tapply(iris$sepal.length, iris$species, mean)
tapply(iris$Speal.Length, iris$Species, mean)
tapply(iris$Sepal.Length, iris$Species, mean)
apply(iris[1:4]1, mean)
apply(iris[1:4],1, mean)
apply(iris[1:4],2, mean)
?apply
apply(iris[,1:4],2, mean)
apply(iris, 2, mean)
apply(iris,1,mean)
library(datasets)
data(mtcars)
?mtcars
head(mtcars)
tapply(mtcars$mpg,mtcars$cyl,mean)
tapply(mtcars$hp,mtcars$cyl,mean)
[tapply(mtcars$hp,mtcars$cyl,mean),1] - [tapply(mtcars$hp,mtcars$cyl,mean),3]
i <- tapply(mtcars$mpg,mtcars$cyl,mean)
i
i[3]-i[1]
tapply(mtcars$hp,mtcars$cyl,mean),[1] - tapply(mtcars$hp,mtcars$cyl,mean),[3]
tapply(mtcars$hp,mtcars$cyl,mean)[1] - tapply(mtcars$hp,mtcars$cyl,mean)[3]
tapply(mtcars$hp,mtcars$cyl,mean)[3]
rm(i)
i
i <- tapply(mtcars$hp, mtcars$cyl, mean)
i
i[3] - i[1]
tapply(mtcars$hp, mtcars$cyl, mean)[3] - tapply(mcars$hp, mtcars$cyl, mean)[1]
tapply(mtcars$hp, mtcars$cyl, mean)[3] - tapply(mtcars$hp, mtcars$cyl, mean)[1]
debug(ls)
ls
debug(ls)
ls(2)
bye()
exit
close
close()
exit()
quit()
quit
quit
library("swirl")
swirl()
quit9)
quit()
install.packages("RMySQL")
Sys.setenv(PKG_CPPFLAGS = "-I/usr/local/include/mysql")
Sys.setenv(PKG_LIBS = "-L/usr/local/lib -lmysqlclient")
install.packages("RMySQL", type = "source")
library(RMySQL)
library(DBI)
library(RMySQL)
example(points)
?gl
?par
setwd("~/datasciencecoursera/Personal/ASoIaF")
Clash <- scan("Clash.txt", what="char", sep="", quote = "")
boiled <- grep("*boiled*", Clash)
leather <- grep("*leather*", Clash)
for (i in 1:length(boiled)) {
a <- paste(Clash[(boiled[i]-2):(boiled[i]+2)])
aa[i] <- toString(a)
}
aa <- gsub(",", "", aa)
table(grepl("boiled.leather",aa))
feast <- scan("Dance.txt", what="char", sep="", quote = "")
boiled <- grep("*boiled*", feast)
leather <- grep("*leather*", feast)
for (i in 1:length(boiled)) {
a <- paste(feast[(boiled[i]-2):(boiled[i]+2)])
aa[i] <- toString(a)
}
aa <- gsub(",", "", aa)
table(grepl("boiled.leather",aa))
bb <- as.list(5)
bb <- as.list(n=5)
bb <- as.list()
bb <- as.list
?as.list
bb <- list
bb <- is.list
length(b) <- 5
bb <- as.vector(list)
bb <- list9)
bb <- list()
feast <- scan("Storm.txt", what="char", sep="", quote = "")
boiled <- grep("*boiled*", feast)
leather <- grep("*leather*", feast)
aa <- list()
for (i in 1:length(boiled)) {
a <- paste(feast[(boiled[i]-2):(boiled[i]+2)])
aa[i] <- toString(a)
}
aa <- gsub(",", "", aa)
table(grepl("boiled.leather",aa))
storm <- scan("Storm.txt", what="char", sep="", quote = "")
boiled <- grep("*boiled*", storm)
leather <- grep("*leather*", storm)
aa <- list()
for (i in 1:length(boiled)) {
a <- paste(storm[(boiled[i]-2):(boiled[i]+2)])
aa[i] <- toString(a)
}
aa <- gsub(",", "", aa)
table(grepl("boiled.leather",aa))
game <- scan("Game.txt", what="char", sep="", quote = "")
boiled <- grep("*boiled*", game)
leather <- grep("*leather*", game)
aa <- list()
for (i in 1:length(boiled)) {
a <- paste(game[(boiled[i]-2):(boiled[i]+2)])
aa[i] <- toString(a)
}
aa <- gsub(",", "", aa)
table(grepl("boiled.leather",aa))
feast <- scan("Feast.txt", what="char", sep="", quote = "")
boiled <- grep("*boiled*", feast)
leather <- grep("*leather*", feast)
aa <- list()
for (i in 1:length(boiled)) {
a <- paste(feast[(boiled[i]-2):(boiled[i]+2)])
aa[i] <- toString(a)
}
aa <- gsub(",", "", aa)
table(grepl("boiled.leather",aa))
dance <- scan("Dance.txt", what="char", sep="", quote = "")
boiled <- grep("*boiled*", dance)
leather <- grep("*leather*", dance)
aa <- list()
for (i in 1:length(boiled)) {
a <- paste(dance[(boiled[i]-2):(boiled[i]+2)])
aa[i] <- toString(a)
}
aa <- gsub(",", "", aa)
table(grepl("boiled.leather",aa))
Clash <- scan("Clash.txt", what="char", sep="", quote = "")
boiled <- grep("*boiled*", Clash)
leather <- grep("*leather*", Clash)
aa <- list()
for (i in 1:length(boiled)) {
a <- paste(Clash[(boiled[i]-2):(boiled[i]+2)])
aa[i] <- toString(a)
}
aa <- gsub(",", "", aa)
table(grepl("boiled.leather",aa))
Clash <- scan("Clash.txt", what="char", sep="", quote = "")
boiled <- grep("*nuncle*", Clash)
aa <- list()
for (i in 1:length(boiled)) {
a <- paste(Clash[(boiled[i]-2):(boiled[i]+2)])
aa[i] <- toString(a)
}
aa <- gsub(",", "", aa)
table(grepl("nuncle",aa))
Clash <- scan("Clash.txt", what="char", sep="", quote = "")
boiled <- grep("*nuncle*", Clash)
aa <- list()
for (i in 1:length(boiled)) {
a <- paste(Clash[(boiled[i]-2):(boiled[i]+2)])
aa[i] <- toString(a)
}
table(grepl("nuncle",aa))
Clash <- scan("Clash.txt", what="char", sep="", quote = "")
boiled <- grep("*nuncle*", Clash)
boiled
feast <- scan("Feast.txt", what="char", sep="", quote = "")
boiled <- grep("*nuncle*", feast)
boiled
table(unique(feast))
unique(feast)
a <- table(unique(boiled))
a
a <- table(unique(feast))
head(a)
sort(a)
a <- data.frame(a)
a
colnames(a)
sort(freq)
sort(a$Freq)
sort(a$-Freq)
sort(-a$Freq)
table(unique(a$Freq))
table(a)
table(a)
unique(a)
table(a)
table(a)
feast <- scan("Feast.txt", what="char", sep="\\W", quote = "")
feast <- scan("Feast.txt", what="char", sep="\W", quote = "")
feast <- scan("Feast.txt", what="char", sep="\\W+", quote = "")
feast <- scan("Feast.txt", what="char", sep="", quote = "")
feast <- to.lower(feast)
feast <- tolower(feast)
feast
feast.words <- strsplit(feast, "\\W+", perl=TRUE)
feast.words
table(feast.words)
feast.words.vector <- unlist(feast.words)
feast.words.vector
table(feast.words.list)
table(feast.words.vector)
a <- table(feast.words.vector)
order(a)
a
aa <- data.frame(a)
aa
head(a)
colnames(a)
colname(a)
colnames(aa)
order(aa$Freq)
order(-aa$Freq)
sorted <- sort(aa$Freq, decreasing=TRUE)
a <- table(feast.words.vector)
sorted <- sort(aa$Freq, decreasing=TRUE)
sorted
head(sorted)
a <- table(feast.words.vector)
sorted <- sort(a$Freq, decreasing=TRUE)
a <- table(feast.words.vector)
sorted <- sort(a, decreasing=TRUE)
sorted
head(sorted)
sorted
head(sorted, n=50)
head(sorted$nuncle)
sorted[nuncle]
head(sorted, n=1000)
grep("nuncle", a)
grep("i", a)
grep("nuncle", feast.words.vector)
grep("boiled", feast.words.vector)
feast <- scan("Feast.txt", what="char", sep="", quote = "")
boiled <- grep("*boiled*", feast)
leather <- grep("*leather*", feast)
aa <- list()
for (i in 1:length(boiled)) {
a <- paste(feast[(boiled[i]-2):(boiled[i]+2)])
aa[i] <- toString(a)
}
aa <- gsub(",", "", aa)
table(grepl("boiled.leather",aa))
grep("nuncle", feast.words.vector)
length(grep("nuncle", feast.words.vector))
word <- "nuncle"
word
length(grep(word, feast.words.vector))
word <- "nuncle"
game <- scan("Game.txt", what="char", sep="", quote = "")
clash <- scan("Clash.txt", what="char", sep="", quote = "")
feast <- scan("Feast.txt", what="char", sep="", quote = "")
storm <- scan("Storm.txt", what="char", sep="", quote = "")
dance <- scan("Dance.txt", what="char", sep="", quote = "")
game <- tolower(game)
game.words <- strsplit(game, "\\W+", perl=TRUE) //separate words based on white space
game.words.vector <- unlist(game.words) //turn data into vector from list
clash <- tolower(clash)
clash.words <- strsplit(clash, "\\W+", perl=TRUE)
clash.words.vector <- unlist(clas.words)
feast <- tolower(feast)
feast.words <- strsplit(feast, "\\W+", perl=TRUE)
feast.words.vector <- unlist(feast.words)
storm <- tolower(storm)
storm.words <- strsplit(storm, "\\W+", perl=TRUE)
storm.words.vector <- unlist(storm.words)
dance <- tolower(dance)
dance.words <- strsplit(dance, "\\W+", perl=TRUE)
dance.words.vector <- unlist(dance.words)
length(grep(word, game.words.vector))
length(grep(word, clash.words.vector))
length(grep(word, feast.words.vector))
length(grep(word, storm.words.vector))
length(grep(word, dance.words.vector))
game.sorted <- sort(table(game.words.vector, decreasing=TRUE)
clash.sorted <- sort(table(clash.words.vector, decreasing=TRUE)
feast.sorted <- sort(table(feast.words.vector, decreasing=TRUE)
storm.sorted <- sort(table(storm.words.vector, decreasing=TRUE)
dance.sorted <- sort(table(dance.words.vector, decreasing=TRUE)
word <- "nuncle"
game <- scan("Game.txt", what="char", sep="", quote = "")
clash <- scan("Clash.txt", what="char", sep="", quote = "")
feast <- scan("Feast.txt", what="char", sep="", quote = "")
storm <- scan("Storm.txt", what="char", sep="", quote = "")
dance <- scan("Dance.txt", what="char", sep="", quote = "")
game <- tolower(game)
game.words <- strsplit(game, "\\W+", perl=TRUE) #separate words based on white space
game.words.vector <- unlist(game.words) #turn data into vector from list
clash <- tolower(clash)
clash.words <- strsplit(clash, "\\W+", perl=TRUE)
clash.words.vector <- unlist(clas.words)
feast <- tolower(feast)
feast.words <- strsplit(feast, "\\W+", perl=TRUE)
feast.words.vector <- unlist(feast.words)
storm <- tolower(storm)
storm.words <- strsplit(storm, "\\W+", perl=TRUE)
storm.words.vector <- unlist(storm.words)
dance <- tolower(dance)
dance.words <- strsplit(dance, "\\W+", perl=TRUE)
dance.words.vector <- unlist(dance.words)
length(grep(word, game.words.vector))
length(grep(word, clash.words.vector))
length(grep(word, feast.words.vector))
length(grep(word, storm.words.vector))
length(grep(word, dance.words.vector))
game.sorted <- sort(table(game.words.vector, decreasing=TRUE))
clash.sorted <- sort(table(clash.words.vector, decreasing=TRUE)
feast.sorted <- sort(table(feast.words.vector, decreasing=TRUE))
storm.sorted <- sort(table(storm.words.vector, decreasing=TRUE))
dance.sorted <- sort(table(dance.words.vector, decreasing=TRUE))
word <- "nuncle"
game <- scan("Game.txt", what="char", sep="", quote = "")
clash <- scan("Clash.txt", what="char", sep="", quote = "")
feast <- scan("Feast.txt", what="char", sep="", quote = "")
storm <- scan("Storm.txt", what="char", sep="", quote = "")
dance <- scan("Dance.txt", what="char", sep="", quote = "")
game <- tolower(game)
game.words <- strsplit(game, "\\W+", perl=TRUE) #separate words based on white space
game.words.vector <- unlist(game.words) #turn data into vector from list
clash <- tolower(clash)
clash.words <- strsplit(clash, "\\W+", perl=TRUE)
clash.words.vector <- unlist(clash.words)
feast <- tolower(feast)
feast.words <- strsplit(feast, "\\W+", perl=TRUE)
feast.words.vector <- unlist(feast.words)
storm <- tolower(storm)
storm.words <- strsplit(storm, "\\W+", perl=TRUE)
storm.words.vector <- unlist(storm.words)
dance <- tolower(dance)
dance.words <- strsplit(dance, "\\W+", perl=TRUE)
dance.words.vector <- unlist(dance.words)
length(grep(word, game.words.vector))
length(grep(word, clash.words.vector))
length(grep(word, feast.words.vector))
length(grep(word, storm.words.vector))
length(grep(word, dance.words.vector))
game.sorted <- sort(table(game.words.vector, decreasing=TRUE))
clash.sorted <- sort(table(clash.words.vector, decreasing=TRUE)
feast.sorted <- sort(table(feast.words.vector, decreasing=TRUE))
storm.sorted <- sort(table(storm.words.vector, decreasing=TRUE))
dance.sorted <- sort(table(dance.words.vector, decreasing=TRUE))
word <- "nuncle"
game <- scan("Game.txt", what="char", sep="", quote = "")
clash <- scan("Clash.txt", what="char", sep="", quote = "")
feast <- scan("Feast.txt", what="char", sep="", quote = "")
storm <- scan("Storm.txt", what="char", sep="", quote = "")
dance <- scan("Dance.txt", what="char", sep="", quote = "")
game <- tolower(game)
game.words <- strsplit(game, "\\W+", perl=TRUE) #separate words based on white space
game.words.vector <- unlist(game.words) #turn data into vector from list
clash <- tolower(clash)
clash.words <- strsplit(clash, "\\W+", perl=TRUE)
clash.words.vector <- unlist(clash.words)
feast <- tolower(feast)
feast.words <- strsplit(feast, "\\W+", perl=TRUE)
feast.words.vector <- unlist(feast.words)
storm <- tolower(storm)
storm.words <- strsplit(storm, "\\W+", perl=TRUE)
storm.words.vector <- unlist(storm.words)
dance <- tolower(dance)
dance.words <- strsplit(dance, "\\W+", perl=TRUE)
dance.words.vector <- unlist(dance.words)
length(grep(word, game.words.vector))
length(grep(word, clash.words.vector))
length(grep(word, feast.words.vector))
length(grep(word, storm.words.vector))
length(grep(word, dance.words.vector))
game.sorted <- sort(table(game.words.vector, decreasing=TRUE))
clash.sorted <- sort(table(clash.words.vector, decreasing=TRUE))
feast.sorted <- sort(table(feast.words.vector, decreasing=TRUE))
storm.sorted <- sort(table(storm.words.vector, decreasing=TRUE))
dance.sorted <- sort(table(dance.words.vector, decreasing=TRUE))
word <- "nuncle"
game <- scan("Game.txt", what="char", sep="", quote = "")
clash <- scan("Clash.txt", what="char", sep="", quote = "")
feast <- scan("Feast.txt", what="char", sep="", quote = "")
storm <- scan("Storm.txt", what="char", sep="", quote = "")
dance <- scan("Dance.txt", what="char", sep="", quote = "")
game <- tolower(game)
game.words <- strsplit(game, "\\W+", perl=TRUE) #separate words based on white space
game.words.vector <- unlist(game.words) #turn data into vector from list
clash <- tolower(clash)
clash.words <- strsplit(clash, "\\W+", perl=TRUE)
clash.words.vector <- unlist(clash.words)
feast <- tolower(feast)
feast.words <- strsplit(feast, "\\W+", perl=TRUE)
feast.words.vector <- unlist(feast.words)
storm <- tolower(storm)
storm.words <- strsplit(storm, "\\W+", perl=TRUE)
storm.words.vector <- unlist(storm.words)
dance <- tolower(dance)
dance.words <- strsplit(dance, "\\W+", perl=TRUE)
dance.words.vector <- unlist(dance.words)
length(grep(word, game.words.vector))
length(grep(word, clash.words.vector))
length(grep(word, feast.words.vector))
length(grep(word, storm.words.vector))
length(grep(word, dance.words.vector))
game.sorted <- sort(table(game.words.vector), decreasing=TRUE)
clash.sorted <- sort(table(clash.words.vector), decreasing=TRUE)
feast.sorted <- sort(table(feast.words.vector), decreasing=TRUE)
storm.sorted <- sort(table(storm.words.vector), decreasing=TRUE)
dance.sorted <- sort(table(dance.words.vector), decreasing=TRUE)
head(game.sorted, n=1000)
